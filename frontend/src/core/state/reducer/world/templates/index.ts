const handleTroubleSymbol = (symbol: string) => {
  switch (symbol) {
    case "0":
      return "2";
    case "2":
      return "0";
    case "3":
      return "4";
    case "4":
      return "3";
    case "5":
      return "7";
    case "7":
      return "5";
    case "8":
      return "9";
    case "9":
      return "8";
    case "10":
      return "12";
    case "12":
      return "10";
    default: 
      return symbol;
  }
};

const applyTempate = (template: ITemplate): ITemplate => {
  if (template == null || template.length == null || template.data == null) {
    throw new Error("Template is invalid");
  }

  const length = template.length * 2;
  const rows = template.data.length;
  const data = Array(rows); 
  
  for (let y=0; y<rows; y++) {
    const d = [...template.data[y]];
    const s1 = [...d];
    const s2 = [...d].reverse();
    
    s2.forEach((r, index) => s2[index] = handleTroubleSymbol(r));
    data[y] = [...s1, ...s2];   
  }
  
  return {length, data};
};

export const StaticSymbols: string[] = [
  "0", "1", "2", "3", "4", "5", "7", "8", "9", "10", "11", "12",
];

export const PlaceholderSymbols : string[] = ["00"];

export const emptyTile: string = ".";

export interface ITemplate {
  length: number;
  data: string[][];
}

const jungle: ITemplate = ({
  length:
    ["#", "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#" , "#", "#"]
    .length,
  data: [
   ["6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"."], 
   ["6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"0" ,"1" ,"1" ,"1" ,"1" ,"9" ,"." ,"." ,"."], 
   ["1" ,"1" ,"1" ,"1" ,"1" ,"1" ,"1" ,"1" ,"9" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["11","11","11","11","4" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"3" ,"11","11"], 
   ["6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"7" ,"6" ,"6"], 
   ["6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"7" ,"6" ,"6"], 
   ["6" ,"6" ,"6" ,"6" ,"10","11","11","11","11","4" ,"." ,"." ,"." ,"." ,"8" ,"1" ,"1"], 
   ["6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"0" ,"1" ,"1" ,"1" ,"1" ,"1" ,"1" ,"9" ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["1" ,"1" ,"9" ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"." ,"."], 
   ["." ,"." ,"." ,"." ,"." ,"." ,"." ,"3" ,"11","11","11","4" ,"." ,"." ,"." ,"." ,"."], 
   ["." ,"." ,"." ,"." ,"." ,"." ,"." ,"7" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"." ,"." ,"."], 
   ["." ,"." ,"." ,"." ,"." ,"." ,"." ,"7" ,"6" ,"6" ,"6" ,"10","11","4" ,"." ,"." ,"."], 
   ["11","11","11","11","11","11","11","12","6" ,"6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"."], 
   ["6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"5","." ,"." ,"."], 
   ["6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"6" ,"5" ,"." ,"." ,"."], 
  ],
});

export const jungleLevel = (): ITemplate =>
  applyTempate(jungle);

